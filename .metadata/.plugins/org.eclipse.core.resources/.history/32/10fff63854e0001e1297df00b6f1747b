package com.sathya.selvlet;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Date;
import java.util.Base64;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import org.apache.commons.io.IOUtils;

@WebServlet("/UpdateProductServlet")
@MultipartConfig
public class UpdateProductServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    public UpdateProductServlet() {
        super();
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String proId = request.getParameter("proId");
        String updateproName = request.getParameter("proName");

        double updateproPrice = Double.parseDouble(request.getParameter("proPrice"));
        String updateproBrand = request.getParameter("proBrand");
        String updateMadeIN = request.getParameter("proMadeIn");

        Date updatemfgDate = Date.valueOf(request.getParameter("mfgDate"));
        Date updateexpDate = Date.valueOf(request.getParameter("expDate"));

        Product product = new Product();
        product.setProId(proId);
        product.setProName(updateproName);
        product.setProPrice(updateproPrice);
        product.setProBrand(updateproBrand);
        product.setProMadeIn(updateMadeIN);
        product.setProMfgDate(updatemfgDate);
        product.setProExpDate(updateexpDate);

        Part filePart = request.getPart("newProImage");

        if (filePart != null && filePart.getSize() > 0) {
            InputStream inputStream1 = filePart.getInputStream();
            byte[] newImageData = IOUtils.toByteArray(inputStream1);
            product.setProImage(newImageData);
        } else {
            String s=request.getParameter("existingImage");
            byte[]existingImage=Base64.getDecoder().decode(s);
            product.setProImage(existingImage);
        }

        ProductDao dao = new ProductDao();
        int updateResult = dao.updateById(product);

        if (updateResult == 1) {
            RequestDispatcher dispatcher = request.getRequestDispatcher("productlist.jsp");
            dispatcher.forward(request, response);
        } else {
            RequestDispatcher dispatcher = request.getRequestDispatcher("Addproduct.html");
            dispatcher.include(request, response);
        }
    }
}